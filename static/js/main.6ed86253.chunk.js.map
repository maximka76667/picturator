{"version":3,"sources":["components/App.js","reportWebVitals.js","index.js"],"names":["App","React","useEffect","className","container","i","block","push","createBlocks","onMouseDown","e","heading","document","querySelector","style","position","zIndex","shiftX","clientX","getBoundingClientRect","left","shiftY","clientY","top","moveAt","x","y","onMouseMove","pageX","pageY","addEventListener","onmouseup","removeEventListener","onClick","anime","targets","backgroundColor","random","toString","width","height","borderRadius","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yKAiFeA,MA9Ef,WAiEE,OAJAC,IAAMC,WAAU,cAEb,IAGD,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SAjEJ,WAEE,IADA,IAAIC,EAAY,GACRC,EAAI,EAAGA,GAAK,IAAKA,IAAK,CAC3B,IAAMC,EAAQ,qBAAaH,UAAU,SAAbE,GACxBD,EAAUG,KAAKD,GAElB,OAAOF,EA4DFI,KAEH,qBAAKC,YAnCT,SAAyBC,GACvB,IAAMC,EAAUC,SAASC,cAAc,YACvCF,EAAQG,MAAMC,SAAW,WACzBJ,EAAQG,MAAME,OAAS,IAEvB,IAAIC,EAASP,EAAEQ,QAAUP,EAAQQ,wBAAwBC,KACrDC,EAASX,EAAEY,QAAUX,EAAQQ,wBAAwBI,IAKzD,SAASC,EAAOC,EAAGC,GACjBf,EAAQG,MAAMM,KAAOK,EAAIR,EAAS,KAClCN,EAAQG,MAAMS,IAAMG,EAAIL,EAAS,KAGnC,SAASM,EAAYjB,GACnBc,EAAOd,EAAEkB,MAAOlB,EAAEmB,OATpBL,EAAOd,EAAEkB,MAAOlB,EAAEmB,OAClBjB,SAASkB,iBAAiB,YAAaH,GAWvChB,EAAQoB,UAAY,WAClBnB,SAASoB,oBAAoB,YAAaL,GAC1Cf,SAASC,cAAc,YAAYkB,UAAY,OAaZ5B,UAAU,UAA7C,SACE,oBAAIA,UAAU,UAAd,oDAEF,wBAAQA,UAAU,SAAS8B,QA9D/B,WACEC,YAAM,CACJC,QAAS,SACTC,gBAAiB,WACf,MAAO,IAAMF,IAAMG,OAAO,EAAG,KAAKC,SAAS,IAAMJ,IAAMG,OAAO,EAAG,KAAKC,SAAS,IAAMJ,IAAMG,OAAO,EAAG,KAAKC,SAAS,KAErHlB,KAAM,WACJ,OAAOc,IAAMG,OAAO,EAAG,KAAO,MAEhCd,IAAK,WACH,OAAOW,IAAMG,OAAO,EAAG,KAAO,MAEhCE,MAAO,WACL,OAAOL,IAAMG,OAAO,GAAK,IAAM,KAEjCG,OAAQ,WACN,OAAON,IAAMG,OAAO,GAAK,IAAM,KAEjCI,aAAc,WACZ,OAAOP,IAAMG,OAAO,EAAG,KAAO,QA2ChC,+BChESK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzC,SAAS0C,eAAe,SAM1BZ,K","file":"static/js/main.6ed86253.chunk.js","sourcesContent":["import React from 'react'\nimport anime from 'animejs'\n\nfunction App() {\n\n  function createBlocks() {\n    let container = [];\n    for(let i = 1; i <= 100; i++) {\n       const block = <div key={i} className=\"block\"></div>;\n       container.push(block);\n    }\n    return container;\n  }\n\n  function animate() {\n    anime({\n      targets: '.block',\n      backgroundColor: () => {\n        return '#' + anime.random(0, 256).toString(16) + anime.random(0, 256).toString(16) + anime.random(0, 256).toString(16);\n      },\n      left: () => {\n        return anime.random(0, 100) + 'vw';\n      },\n      top: () => {\n        return anime.random(0, 100) + 'vh';\n      },\n      width: () => {\n        return anime.random(0.5, 15) + '%';\n      },\n      height: () => {\n        return anime.random(0.5, 25) + '%';\n      },\n      borderRadius: () => {\n        return anime.random(0, 100) + '%';\n      }\n    })\n  }\n\n  function handleMouseDown(e) {\n    const heading = document.querySelector('.content')\n    heading.style.position = 'absolute'\n    heading.style.zIndex = 100;\n\n    let shiftX = e.clientX - heading.getBoundingClientRect().left;\n    let shiftY = e.clientY - heading.getBoundingClientRect().top;\n\n    moveAt(e.pageX, e.pageY, heading);\n    document.addEventListener('mousemove', onMouseMove);\n\n    function moveAt(x, y) {\n      heading.style.left = x - shiftX + 'px';\n      heading.style.top = y - shiftY + 'px';\n    }\n\n    function onMouseMove(e) {\n      moveAt(e.pageX, e.pageY);\n    }\n\n    heading.onmouseup = function() {\n      document.removeEventListener('mousemove', onMouseMove);\n      document.querySelector('.content').onmouseup = null;\n    }\n  }\n\n  React.useEffect(() => {\n    \n  }, [])\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        {createBlocks()}\n      </div>\n      <div onMouseDown={handleMouseDown} className=\"content\">\n        <h1 className=\"heading\">Click to generate masterpiece of art</h1>\n      </div>\n      <button className=\"button\" onClick={animate}>It's a Button</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}